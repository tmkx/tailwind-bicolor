import{d as u,o as n,c as s,a as o,b as g,x,j as y,r as p,e as v,t as d,f as C,n as m,F as _,g as h,h as c,i as k}from"./vendor.757292a9.js";const w=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const b of i.addedNodes)b.tagName==="LINK"&&b.rel==="modulepreload"&&r(b)}).observe(document,{childList:!0,subtree:!0});function l(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerpolicy&&(i.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?i.credentials="include":e.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(e){if(e.ep)return;e.ep=!0;const i=l(e);fetch(e.href,i)}};w();const $={class:"mb-6 py-2 sticky top-0 bi:bg-slate-50"},L=o("div",null,"tailwind-bicolor",-1),N=u({setup(a){function t(){document.documentElement.classList.toggle("dark")}return(l,r)=>(n(),s("header",$,[o("div",{class:"container m-auto flex justify-between px-6 leading-10"},[L,o("div",null,[o("button",{class:"bi:bg-blue-500 text-white text-sm py-1 px-2 rounded",onClick:t}," Toggle Theme ")])])]))}});const S={key:0,class:"mt-6 text-xl font-bold"},T={class:"my-2"},f=u({props:{title:null,lang:null,code:null},setup(a){const t=a;g.registerLanguage("html",x),g.registerLanguage("javascript",y);const l=p();return v(()=>{g.highlightElement(l.value)}),(r,e)=>(n(),s("div",null,[t.title?(n(),s("h3",S,d(t.title),1)):C("",!0),o("pre",T,[o("code",{ref_key:"codeRef",ref:l,class:m(`rounded language-${t.lang}`)},d(t.code),3)])]))}}),j=o("h3",{class:"text-lg font-bold"},"Buttons",-1),E={class:"-m-2"},R=u({setup(a){const t=p([["Slate","bi:bg-slate-500"],["Gray","bi:bg-gray-500"],["Zinc","bi:bg-zinc-500"],["Neutral","bi:bg-neutral-500"],["Stone","bi:bg-stone-500"],["Red","bi:bg-red-500"],["Orange","bi:bg-orange-500"],["Amber","bi:bg-amber-500"],["Yellow","bi:bg-yellow-500"],["Lime","bi:bg-lime-500"],["Green","bi:bg-green-500"],["Emerald","bi:bg-emerald-500"],["Teal","bi:bg-teal-500"],["Cyan","bi:bg-cyan-500"],["Sky","bi:bg-sky-500"],["Blue","bi:bg-blue-500"],["Indigo","bi:bg-indigo-500"],["Violet","bi:bg-violet-500"],["Purple","bi:bg-purple-500"],["Fuchsia","bi:bg-fuchsia-500"],["Pink","bi:bg-pink-500"],["Rose","bi:bg-rose-500"]]);return(l,r)=>(n(),s("div",null,[j,o("div",E,[(n(!0),s(_,null,h(t.value,e=>(n(),s("button",{class:m(`px-5 py-1 m-2 rounded text-slate-200 ${e[1]}`)},d(e[0]),3))),256))])]))}}),B=o("h3",{class:"text-lg font-bold"},"Texts",-1),O={class:"-m-2 whitespace-normal"},P=u({setup(a){const t=p([["Slate","bi:text-slate-700"],["Gray","bi:text-gray-700"],["Zinc","bi:text-zinc-700"],["Neutral","bi:text-neutral-700"],["Stone","bi:text-stone-700"],["Red","bi:text-red-700"],["Orange","bi:text-orange-700"],["Amber","bi:text-amber-700"],["Yellow","bi:text-yellow-700"],["Lime","bi:text-lime-700"],["Green","bi:text-green-700"],["Emerald","bi:text-emerald-700"],["Teal","bi:text-teal-700"],["Cyan","bi:text-cyan-700"],["Sky","bi:text-sky-700"],["Blue","bi:text-blue-700"],["Indigo","bi:text-indigo-700"],["Violet","bi:text-violet-700"],["Purple","bi:text-purple-700"],["Fuchsia","bi:text-fuchsia-700"],["Pink","bi:text-pink-700"],["Rose","bi:text-rose-700"]]);return(l,r)=>(n(),s("div",null,[B,o("div",O,[(n(!0),s(_,null,h(t.value,e=>(n(),s("span",{class:m(`inline-block px-5 py-1 m-2 ${e[1]}`)},d(e[0]),3))),256))])]))}}),F={class:"container m-auto px-6"},V={class:"space-y-6 mt-6"},z=o("h2",{class:"mt-6 text-xl font-bold"},"Demos",-1),A=u({setup(a){const t=`<div class="bg-white dark:bg-black"></div>
<!-- Replace with below \u2193\u2193\u2193 -->
<div class="bi:bg-white"></div>`,l="// tailwind.config.js\nconst { bicolor } = require('tailwind-bicolor');\n\nmodule.exports = {\n  // ...\n  plugins: [\n    // bicolor will auto convert:\n    // - `white` to `black` and vice versa\n    // - `50` to `900`\n    // - `100` to `800`\n    // - `200` to `700`\n    // - ...\n    bicolor(),\n  ],\n};",r=`const { bicolor } = require('tailwind-bicolor');

module.exports = {
  // ...
  plugins: [
    // The exports of package is a function instead of a plugin instance,
    // and it can not be configured by tailwind's \`config\` property.
    // The function is fully typed.
    bicolor({
      variantName: 'bi',
      // handle your custom color reflection
      getColor({ selector, classColor, theme }) {
        if (classColor.color === 'green' && classColor.shade) {
          return theme(\`colors.blue.\${classColor.shade}\`);
        }
        // ignore
        return '';
      },
    }),
  ],
};`;return(e,i)=>(n(),s("div",null,[c(N),o("div",F,[c(f,{title:"Easy to use",lang:"html",code:t}),o("div",V,[z,c(R),c(P)]),c(f,{title:"Simple Config",lang:"javascript",code:l}),c(f,{title:"Customize Config",lang:"javascript",code:r})])]))}});const G=k(A);G.mount("#root");
